// [js连等号运算顺序](https://blog.csdn.net/weixin_42989966/article/details/103717102)
var a = { n: 1 };
var b = a;
a.x = a = { n: 2 };
console.log(a.x); // 输出？

// 由于点运算符优先于赋值运算符所以先在{n：1}对象中创建了一个x属性 {n:1， x：（暂时无值）} 
// 然后连等号从右到左, a指定的值变成了 { n: 2 } 那么他原先指向的 { n: 1}就被释放了
// 被释放的值此时还有b的引用, 所以  运行最后一个等号时, 该值被赋过去了 {n:1， x: { n: 2 }}

// 所以 最后结果  a => { n: 1}  ; b => {n:1， x: { n: 2 }}
// 所以 a.x 是undefined